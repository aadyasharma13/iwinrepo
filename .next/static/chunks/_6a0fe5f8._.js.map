{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadyasharma/Downloads/iwin-main/lib/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID // Optional for analytics\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nexport const auth = getAuth(app);\n\n// Initialize Cloud Firestore and get a reference to the service\nexport const db = getFirestore(app);\n\n// Initialize Cloud Storage and get a reference to the service\nexport const storage = getStorage(app);\n\nexport default app;"],"names":[],"mappings":";;;;;;AAMU;AANV;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,eAAe,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,yBAAyB;AAC1F;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AAGnB,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAGrB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AAGxB,MAAM,UAAU,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;uCAEnB","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadyasharma/Downloads/iwin-main/contexts/AuthContext.js"],"sourcesContent":["'use client';\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged,\n  sendEmailVerification as firebaseSendEmailVerification,\n  reload\n} from 'firebase/auth';\nimport { \n  doc, \n  setDoc, \n  getDoc, \n  updateDoc, \n  onSnapshot // Add this import for real-time updates\n} from 'firebase/firestore';\nimport { ref, uploadBytes, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { auth, db, storage } from '@/lib/firebase';\n\nconst AuthContext = createContext({});\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let unsubscribeFirestore = null;\n\n    const unsubscribeAuth = onAuthStateChanged(auth, async (firebaseUser) => {\n      // Clean up previous Firestore listener\n      if (unsubscribeFirestore) {\n        unsubscribeFirestore();\n        unsubscribeFirestore = null;\n      }\n\n      if (firebaseUser) {\n        try {\n          const userDocRef = doc(db, 'users', firebaseUser.uid);\n          \n          // First, get the current user data\n          const userDoc = await getDoc(userDocRef);\n          \n          if (userDoc.exists()) {\n            const userData = userDoc.data();\n            \n            // Set up real-time listener for user document changes\n            unsubscribeFirestore = onSnapshot(userDocRef, async (docSnapshot) => {\n              if (docSnapshot.exists()) {\n                const realtimeUserData = docSnapshot.data();\n                \n                // Always use Firebase Auth as source of truth for emailVerified\n                const currentUser = {\n                  uid: firebaseUser.uid,\n                  email: firebaseUser.email,\n                  emailVerified: firebaseUser.emailVerified,\n                  displayName: firebaseUser.displayName,\n                  photoURL: firebaseUser.photoURL,\n                  ...realtimeUserData\n                };\n\n                // If email verification status changed in Firebase, update Firestore\n                if (realtimeUserData.emailVerified !== firebaseUser.emailVerified) {\n                  try {\n                    await updateDoc(userDocRef, {\n                      emailVerified: firebaseUser.emailVerified,\n                      emailVerifiedAt: firebaseUser.emailVerified ? new Date().toISOString() : null\n                    });\n                    currentUser.emailVerified = firebaseUser.emailVerified;\n                    currentUser.emailVerifiedAt = firebaseUser.emailVerified ? new Date().toISOString() : null;\n                  } catch (updateError) {\n                    console.error('Error updating email verification status:', updateError);\n                  }\n                }\n                \n                console.log('Real-time user data update:', currentUser);\n                setUser(currentUser);\n              } else {\n                console.log('User document deleted');\n                setUser(null);\n              }\n            }, (error) => {\n              console.error('Error in Firestore listener:', error);\n              // Fallback to one-time fetch if listener fails\n              getDoc(userDocRef).then(fallbackDoc => {\n                if (fallbackDoc.exists()) {\n                  const fallbackData = fallbackDoc.data();\n                  setUser({\n                    uid: firebaseUser.uid,\n                    email: firebaseUser.email,\n                    emailVerified: firebaseUser.emailVerified,\n                    displayName: firebaseUser.displayName,\n                    photoURL: firebaseUser.photoURL,\n                    ...fallbackData\n                  });\n                }\n              }).catch(fallbackError => {\n                console.error('Fallback fetch also failed:', fallbackError);\n                setUser(null);\n              });\n            });\n\n          } else {\n            // New user - create minimal user document\n            console.log('Creating user document for new user:', firebaseUser.email);\n            \n            const newUserData = {\n              uid: firebaseUser.uid,\n              email: firebaseUser.email,\n              emailVerified: firebaseUser.emailVerified,\n              profileCompleted: false,\n              displayName: firebaseUser.displayName || null,\n              photoURL: firebaseUser.photoURL || null,\n              role: null,\n              profileVisibility: 'public',\n              bio: '',\n              location: '',\n              roleSpecificData: {},\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString(),\n              authProvider: 'email',\n              isActive: true\n            };\n\n            await setDoc(userDocRef, newUserData);\n            \n            // Set up listener for the newly created document\n            unsubscribeFirestore = onSnapshot(userDocRef, (docSnapshot) => {\n              if (docSnapshot.exists()) {\n                const realtimeUserData = docSnapshot.data();\n                setUser({\n                  uid: firebaseUser.uid,\n                  email: firebaseUser.email,\n                  emailVerified: firebaseUser.emailVerified,\n                  displayName: firebaseUser.displayName,\n                  photoURL: firebaseUser.photoURL,\n                  ...realtimeUserData\n                });\n              }\n            }, (error) => {\n              console.error('Error in new user Firestore listener:', error);\n              setUser(newUserData); // Fallback to initial data\n            });\n          }\n        } catch (error) {\n          console.error('Error setting up user data:', error);\n          setUser(null);\n        }\n      } else {\n        // User signed out\n        console.log('User signed out');\n        setUser(null);\n      }\n      \n      setLoading(false);\n    });\n\n    // Cleanup function\n    return () => {\n      console.log('Cleaning up AuthContext listeners');\n      unsubscribeAuth();\n      if (unsubscribeFirestore) {\n        unsubscribeFirestore();\n      }\n    };\n  }, []);\n\n  const uploadFile = async (file, path) => {\n    try {\n      const storageRef = ref(storage, path);\n      const snapshot = await uploadBytes(storageRef, file);\n      const downloadURL = await getDownloadURL(snapshot.ref);\n      return { success: true, url: downloadURL, path: path };\n    } catch (error) {\n      console.error('File upload error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const deleteFile = async (path) => {\n    try {\n      const storageRef = ref(storage, path);\n      await deleteObject(storageRef);\n      return { success: true };\n    } catch (error) {\n      console.error('File delete error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const signUp = async (email, password) => {\n    try {\n      const result = await createUserWithEmailAndPassword(auth, email, password);\n      \n      // Send email verification immediately\n      await firebaseSendEmailVerification(result.user);\n      \n      // Note: User document will be created automatically by onAuthStateChanged\n      return { success: true };\n    } catch (error) {\n      console.error('Signup error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const signIn = async (email, password) => {\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      return { success: true };\n    } catch (error) {\n      console.error('Signin error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      return { success: true };\n    } catch (error) {\n      console.error('Logout error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const sendEmailVerification = async () => {\n    if (auth.currentUser) {\n      try {\n        await firebaseSendEmailVerification(auth.currentUser);\n        return { success: true };\n      } catch (error) {\n        console.error('Send verification error:', error);\n        return { success: false, error: error.message };\n      }\n    }\n    return { success: false, error: 'No user logged in' };\n  };\n\n  const checkEmailVerification = async () => {\n    if (auth.currentUser) {\n      try {\n        console.log('Checking email verification status...');\n        await reload(auth.currentUser);\n        const isVerified = auth.currentUser.emailVerified;\n        console.log('Email verification status:', isVerified);\n        \n        // If verification status changed, the real-time listener will automatically\n        // update the user state when we update Firestore\n        if (isVerified && user && !user.emailVerified) {\n          console.log('Email verification status changed, updating Firestore...');\n          \n          const userDocRef = doc(db, 'users', auth.currentUser.uid);\n          await updateDoc(userDocRef, {\n            emailVerified: true,\n            emailVerifiedAt: new Date().toISOString()\n          });\n          // No need to manually update state - the listener will handle it\n        }\n        \n        return { success: true, verified: isVerified };\n      } catch (error) {\n        console.error('Check verification error:', error);\n        return { success: false, error: error.message, verified: false };\n      }\n    }\n    return { success: false, error: 'No user logged in', verified: false };\n  };\n\n  const updateUserProfile = async (updateData) => {\n    try {\n      if (!auth.currentUser) {\n        throw new Error('No authenticated user');\n      }\n\n      const dataToUpdate = {\n        ...updateData,\n        updatedAt: new Date().toISOString()\n      };\n\n      // Update Firestore - the real-time listener will automatically update local state\n      await updateDoc(doc(db, 'users', auth.currentUser.uid), dataToUpdate);\n\n      return { success: true };\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  // Manual refresh function (optional - mostly for debugging or fallback)\n  const refreshUserData = async () => {\n    if (auth.currentUser) {\n      try {\n        console.log('Manually refreshing user data...');\n        const userDocRef = doc(db, 'users', auth.currentUser.uid);\n        const userDoc = await getDoc(userDocRef);\n        \n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          setUser({\n            uid: auth.currentUser.uid,\n            email: auth.currentUser.email,\n            emailVerified: auth.currentUser.emailVerified,\n            displayName: auth.currentUser.displayName,\n            photoURL: auth.currentUser.photoURL,\n            ...userData\n          });\n          return { success: true };\n        }\n      } catch (error) {\n        console.error('Error refreshing user data:', error);\n        return { success: false, error: error.message };\n      }\n    }\n    return { success: false, error: 'No user logged in' };\n  };\n\n  const value = {\n    user,\n    loading,\n    signUp,\n    signIn,\n    logout,\n    sendEmailVerification,\n    checkEmailVerification,\n    updateUserProfile,\n    uploadFile,\n    deleteFile,\n    refreshUserData // Add this for manual refresh if needed\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"names":[],"mappings":";;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAOA;AAAA;AACA;;;AAlBA;;;;;;AAoBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAE,CAAC;AAE5B,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAQN,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE;;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,uBAAuB;YAE3B,MAAM,kBAAkB,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,kHAAA,CAAA,OAAI;0DAAE,OAAO;oBACtD,uCAAuC;oBACvC,IAAI,sBAAsB;wBACxB;wBACA,uBAAuB;oBACzB;oBAEA,IAAI,cAAc;wBAChB,IAAI;4BACF,MAAM,aAAa,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,kHAAA,CAAA,KAAE,EAAE,SAAS,aAAa,GAAG;4BAEpD,mCAAmC;4BACnC,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;4BAE7B,IAAI,QAAQ,MAAM,IAAI;gCACpB,MAAM,WAAW,QAAQ,IAAI;gCAE7B,sDAAsD;gCACtD,uBAAuB,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE;8EAAY,OAAO;wCACnD,IAAI,YAAY,MAAM,IAAI;4CACxB,MAAM,mBAAmB,YAAY,IAAI;4CAEzC,gEAAgE;4CAChE,MAAM,cAAc;gDAClB,KAAK,aAAa,GAAG;gDACrB,OAAO,aAAa,KAAK;gDACzB,eAAe,aAAa,aAAa;gDACzC,aAAa,aAAa,WAAW;gDACrC,UAAU,aAAa,QAAQ;gDAC/B,GAAG,gBAAgB;4CACrB;4CAEA,qEAAqE;4CACrE,IAAI,iBAAiB,aAAa,KAAK,aAAa,aAAa,EAAE;gDACjE,IAAI;oDACF,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,YAAY;wDAC1B,eAAe,aAAa,aAAa;wDACzC,iBAAiB,aAAa,aAAa,GAAG,IAAI,OAAO,WAAW,KAAK;oDAC3E;oDACA,YAAY,aAAa,GAAG,aAAa,aAAa;oDACtD,YAAY,eAAe,GAAG,aAAa,aAAa,GAAG,IAAI,OAAO,WAAW,KAAK;gDACxF,EAAE,OAAO,aAAa;oDACpB,QAAQ,KAAK,CAAC,6CAA6C;gDAC7D;4CACF;4CAEA,QAAQ,GAAG,CAAC,+BAA+B;4CAC3C,QAAQ;wCACV,OAAO;4CACL,QAAQ,GAAG,CAAC;4CACZ,QAAQ;wCACV;oCACF;;8EAAG,CAAC;wCACF,QAAQ,KAAK,CAAC,gCAAgC;wCAC9C,+CAA+C;wCAC/C,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,YAAY,IAAI;sFAAC,CAAA;gDACtB,IAAI,YAAY,MAAM,IAAI;oDACxB,MAAM,eAAe,YAAY,IAAI;oDACrC,QAAQ;wDACN,KAAK,aAAa,GAAG;wDACrB,OAAO,aAAa,KAAK;wDACzB,eAAe,aAAa,aAAa;wDACzC,aAAa,aAAa,WAAW;wDACrC,UAAU,aAAa,QAAQ;wDAC/B,GAAG,YAAY;oDACjB;gDACF;4CACF;qFAAG,KAAK;sFAAC,CAAA;gDACP,QAAQ,KAAK,CAAC,+BAA+B;gDAC7C,QAAQ;4CACV;;oCACF;;4BAEF,OAAO;gCACL,0CAA0C;gCAC1C,QAAQ,GAAG,CAAC,wCAAwC,aAAa,KAAK;gCAEtE,MAAM,cAAc;oCAClB,KAAK,aAAa,GAAG;oCACrB,OAAO,aAAa,KAAK;oCACzB,eAAe,aAAa,aAAa;oCACzC,kBAAkB;oCAClB,aAAa,aAAa,WAAW,IAAI;oCACzC,UAAU,aAAa,QAAQ,IAAI;oCACnC,MAAM;oCACN,mBAAmB;oCACnB,KAAK;oCACL,UAAU;oCACV,kBAAkB,CAAC;oCACnB,WAAW,IAAI,OAAO,WAAW;oCACjC,WAAW,IAAI,OAAO,WAAW;oCACjC,cAAc;oCACd,UAAU;gCACZ;gCAEA,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,YAAY;gCAEzB,iDAAiD;gCACjD,uBAAuB,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE;8EAAY,CAAC;wCAC7C,IAAI,YAAY,MAAM,IAAI;4CACxB,MAAM,mBAAmB,YAAY,IAAI;4CACzC,QAAQ;gDACN,KAAK,aAAa,GAAG;gDACrB,OAAO,aAAa,KAAK;gDACzB,eAAe,aAAa,aAAa;gDACzC,aAAa,aAAa,WAAW;gDACrC,UAAU,aAAa,QAAQ;gDAC/B,GAAG,gBAAgB;4CACrB;wCACF;oCACF;;8EAAG,CAAC;wCACF,QAAQ,KAAK,CAAC,yCAAyC;wCACvD,QAAQ,cAAc,2BAA2B;oCACnD;;4BACF;wBACF,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,+BAA+B;4BAC7C,QAAQ;wBACV;oBACF,OAAO;wBACL,kBAAkB;wBAClB,QAAQ,GAAG,CAAC;wBACZ,QAAQ;oBACV;oBAEA,WAAW;gBACb;;YAEA,mBAAmB;YACnB;0CAAO;oBACL,QAAQ,GAAG,CAAC;oBACZ;oBACA,IAAI,sBAAsB;wBACxB;oBACF;gBACF;;QACF;iCAAG,EAAE;IAEL,MAAM,aAAa,OAAO,MAAM;QAC9B,IAAI;YACF,MAAM,aAAa,CAAA,GAAA,oKAAA,CAAA,MAAG,AAAD,EAAE,kHAAA,CAAA,UAAO,EAAE;YAChC,MAAM,WAAW,MAAM,CAAA,GAAA,oKAAA,CAAA,cAAW,AAAD,EAAE,YAAY;YAC/C,MAAM,cAAc,MAAM,CAAA,GAAA,oKAAA,CAAA,iBAAc,AAAD,EAAE,SAAS,GAAG;YACrD,OAAO;gBAAE,SAAS;gBAAM,KAAK;gBAAa,MAAM;YAAK;QACvD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,OAAO;gBAAE,SAAS;gBAAO,OAAO,MAAM,OAAO;YAAC;QAChD;IACF;IAEA,MAAM,aAAa,OAAO;QACxB,IAAI;YACF,MAAM,aAAa,CAAA,GAAA,oKAAA,CAAA,MAAG,AAAD,EAAE,kHAAA,CAAA,UAAO,EAAE;YAChC,MAAM,CAAA,GAAA,oKAAA,CAAA,eAAY,AAAD,EAAE;YACnB,OAAO;gBAAE,SAAS;YAAK;QACzB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,OAAO;gBAAE,SAAS;gBAAO,OAAO,MAAM,OAAO;YAAC;QAChD;IACF;IAEA,MAAM,SAAS,OAAO,OAAO;QAC3B,IAAI;YACF,MAAM,SAAS,MAAM,CAAA,GAAA,qOAAA,CAAA,iCAA8B,AAAD,EAAE,kHAAA,CAAA,OAAI,EAAE,OAAO;YAEjE,sCAAsC;YACtC,MAAM,CAAA,GAAA,4NAAA,CAAA,wBAA6B,AAAD,EAAE,OAAO,IAAI;YAE/C,0EAA0E;YAC1E,OAAO;gBAAE,SAAS;YAAK;QACzB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,OAAO;gBAAE,SAAS;gBAAO,OAAO,MAAM,OAAO;YAAC;QAChD;IACF;IAEA,MAAM,SAAS,OAAO,OAAO;QAC3B,IAAI;YACF,MAAM,CAAA,GAAA,iOAAA,CAAA,6BAA0B,AAAD,EAAE,kHAAA,CAAA,OAAI,EAAE,OAAO;YAC9C,OAAO;gBAAE,SAAS;YAAK;QACzB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,OAAO;gBAAE,SAAS;gBAAO,OAAO,MAAM,OAAO;YAAC;QAChD;IACF;IAEA,MAAM,SAAS;QACb,IAAI;YACF,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE,kHAAA,CAAA,OAAI;YAClB,OAAO;gBAAE,SAAS;YAAK;QACzB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,OAAO;gBAAE,SAAS;gBAAO,OAAO,MAAM,OAAO;YAAC;QAChD;IACF;IAEA,MAAM,wBAAwB;QAC5B,IAAI,kHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;YACpB,IAAI;gBACF,MAAM,CAAA,GAAA,4NAAA,CAAA,wBAA6B,AAAD,EAAE,kHAAA,CAAA,OAAI,CAAC,WAAW;gBACpD,OAAO;oBAAE,SAAS;gBAAK;YACzB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,4BAA4B;gBAC1C,OAAO;oBAAE,SAAS;oBAAO,OAAO,MAAM,OAAO;gBAAC;YAChD;QACF;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAAoB;IACtD;IAEA,MAAM,yBAAyB;QAC7B,IAAI,kHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;YACpB,IAAI;gBACF,QAAQ,GAAG,CAAC;gBACZ,MAAM,CAAA,GAAA,6MAAA,CAAA,SAAM,AAAD,EAAE,kHAAA,CAAA,OAAI,CAAC,WAAW;gBAC7B,MAAM,aAAa,kHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,aAAa;gBACjD,QAAQ,GAAG,CAAC,8BAA8B;gBAE1C,4EAA4E;gBAC5E,iDAAiD;gBACjD,IAAI,cAAc,QAAQ,CAAC,KAAK,aAAa,EAAE;oBAC7C,QAAQ,GAAG,CAAC;oBAEZ,MAAM,aAAa,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,kHAAA,CAAA,KAAE,EAAE,SAAS,kHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,GAAG;oBACxD,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,YAAY;wBAC1B,eAAe;wBACf,iBAAiB,IAAI,OAAO,WAAW;oBACzC;gBACA,iEAAiE;gBACnE;gBAEA,OAAO;oBAAE,SAAS;oBAAM,UAAU;gBAAW;YAC/C,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,OAAO;oBAAE,SAAS;oBAAO,OAAO,MAAM,OAAO;oBAAE,UAAU;gBAAM;YACjE;QACF;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;YAAqB,UAAU;QAAM;IACvE;IAEA,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,IAAI,CAAC,kHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;gBACrB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,eAAe;gBACnB,GAAG,UAAU;gBACb,WAAW,IAAI,OAAO,WAAW;YACnC;YAEA,kFAAkF;YAClF,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,kHAAA,CAAA,KAAE,EAAE,SAAS,kHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,GAAG,GAAG;YAExD,OAAO;gBAAE,SAAS;YAAK;QACzB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;gBAAE,SAAS;gBAAO,OAAO,MAAM,OAAO;YAAC;QAChD;IACF;IAEA,wEAAwE;IACxE,MAAM,kBAAkB;QACtB,IAAI,kHAAA,CAAA,OAAI,CAAC,WAAW,EAAE;YACpB,IAAI;gBACF,QAAQ,GAAG,CAAC;gBACZ,MAAM,aAAa,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,kHAAA,CAAA,KAAE,EAAE,SAAS,kHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,GAAG;gBACxD,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;gBAE7B,IAAI,QAAQ,MAAM,IAAI;oBACpB,MAAM,WAAW,QAAQ,IAAI;oBAC7B,QAAQ;wBACN,KAAK,kHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,GAAG;wBACzB,OAAO,kHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,KAAK;wBAC7B,eAAe,kHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,aAAa;wBAC7C,aAAa,kHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,WAAW;wBACzC,UAAU,kHAAA,CAAA,OAAI,CAAC,WAAW,CAAC,QAAQ;wBACnC,GAAG,QAAQ;oBACb;oBACA,OAAO;wBAAE,SAAS;oBAAK;gBACzB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,+BAA+B;gBAC7C,OAAO;oBAAE,SAAS;oBAAO,OAAO,MAAM,OAAO;gBAAC;YAChD;QACF;QACA,OAAO;YAAE,SAAS;YAAO,OAAO;QAAoB;IACtD;IAEA,MAAM,QAAQ;QACZ;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;IA1Ta;KAAA","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///Users/aadyasharma/Downloads/iwin-main/components/auth/AuthRouter.js"],"sourcesContent":["'use client';\nimport { useEffect, useRef } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\n\nexport default function AuthRouter({ children }) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n  const isRedirecting = useRef(false);\n\n  useEffect(() => {\n    if (loading || isRedirecting.current) return;\n\n    console.log('AuthRouter check:', {\n      user: user ? {\n        email: user.email,\n        emailVerified: user.emailVerified,\n        displayName: user.displayName,\n        profileCompleted: user.profileCompleted,\n        role: user.role\n      } : null,\n      pathname\n    });\n\n    // Define public routes (no authentication required)\n    const publicRoutes = ['/', '/auth', '/community'];\n    const isPublicRoute = publicRoutes.includes(pathname);\n\n    // Define admin-only routes\n    const adminOnlyRoutes = ['/admin'];\n    const isAdminRoute = adminOnlyRoutes.some(route => pathname.startsWith(route));\n\n    if (!user) {\n      // No user - redirect to auth page unless already on public route\n      if (!isPublicRoute) {\n        console.log('No user, redirecting to auth');\n        isRedirecting.current = true;\n        router.push('/auth');\n        setTimeout(() => { isRedirecting.current = false; }, 1000);\n      }\n      return;\n    }\n\n    // Check admin access\n    if (isAdminRoute && user.role !== 'admin') {\n      console.log('Non-admin trying to access admin route, redirecting to home');\n      isRedirecting.current = true;\n      router.push('/');\n      setTimeout(() => { isRedirecting.current = false; }, 1000);\n      return;\n    }\n\n    // Special handling for admins\n    if (user.role === 'admin') {\n      console.log('Admin user detected, allowing access to:', pathname);\n      \n      // If admin is on auth page, redirect to admin dashboard\n      if (pathname === '/auth') {\n        console.log('Admin on auth page, redirecting to admin dashboard');\n        isRedirecting.current = true;\n        router.push('/admin');\n        setTimeout(() => { isRedirecting.current = false; }, 1000);\n      }\n      \n      // Admins have full access, no further restrictions\n      return;\n    }\n\n    // For non-admin users, continue with normal flow\n    const targetPath = getUserTargetPath(user);\n    console.log('User target path:', targetPath, 'Current path:', pathname);\n\n    // If user is on auth page but logged in, redirect to target\n    if (pathname === '/auth') {\n      console.log('User on auth page, redirecting to:', targetPath);\n      isRedirecting.current = true;\n      router.push(targetPath);\n      setTimeout(() => { isRedirecting.current = false; }, 1000);\n      return;\n    }\n\n    // Check if user should be redirected (only for non-admins)\n    const shouldRedirect = getShouldRedirect(user, pathname, targetPath);\n    \n    if (shouldRedirect) {\n      console.log('Should redirect - User not on correct path, redirecting from', pathname, 'to', targetPath);\n      isRedirecting.current = true;\n      router.push(targetPath);\n      setTimeout(() => { isRedirecting.current = false; }, 1000);\n    }\n\n  }, [user, loading, pathname, router]);\n\n  // Determine if user should be redirected (not applicable to admins)\n  const getShouldRedirect = (user, currentPath, targetPath) => {\n    // Admins can go anywhere\n    if (user.role === 'admin') return false;\n\n    // Don't redirect if already on target path\n    if (currentPath === targetPath) return false;\n\n    // Allow access to public routes and community\n    const allowedPublicRoutes = ['/', '/community', '/profile'];\n    if (allowedPublicRoutes.includes(currentPath)) return false;\n\n    // Special cases for verification flow\n    if (!user.emailVerified) {\n      // If email not verified, only allow verify-email page and public routes\n      return currentPath !== '/auth/verify-email' && !allowedPublicRoutes.includes(currentPath);\n    }\n\n    if (!user.profileCompleted) {\n      // If profile not completed, only allow profile setup page and public routes\n      return currentPath !== '/profile/setup' && !allowedPublicRoutes.includes(currentPath);\n    }\n\n    // For completed profiles, allow access to most routes\n    const restrictedRoutes = ['/auth', '/auth/verify-email', '/profile/setup'];\n    return restrictedRoutes.includes(currentPath);\n  };\n\n  // Determine where user should be based on their completion status (not applicable to admins)\n  const getUserTargetPath = (user) => {\n    // Admins go to admin dashboard by default\n    if (user.role === 'admin') {\n      return '/admin';\n    }\n\n    // 1. Email not verified - must verify first\n    if (!user.emailVerified) {\n      return '/auth/verify-email';\n    }\n\n    // 2. Profile not completed - go to setup\n    if (!user.profileCompleted) {\n      return '/profile/setup';\n    }\n\n    // 3. Everything complete - go to profile\n    return '/profile';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-2 border-emerald-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return children;\n}"],"names":[],"mappings":"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","debugId":null}}]
}