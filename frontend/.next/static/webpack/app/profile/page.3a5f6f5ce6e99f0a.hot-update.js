"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/profile/page",{

/***/ "(app-pages-browser)/./lib/journalService.js":
/*!*******************************!*\
  !*** ./lib/journalService.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   journalService: () => (/* binding */ journalService)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/storage */ \"(app-pages-browser)/./node_modules/firebase/storage/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./lib/firebase.js\");\n\n\n\nclass JournalService {\n    // Create a new journal entry\n    async createJournal(userId, journalData) {\n        try {\n            const journalRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'journals');\n            // Prepare the journal data\n            const journal = {\n                userId,\n                title: journalData.title,\n                content: journalData.content,\n                type: journalData.type,\n                isPublic: journalData.isPublic,\n                tags: journalData.tags || [],\n                createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n                updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n                likes: 0,\n                comments: 0,\n                author: journalData.author || 'Anonymous'\n            };\n            // Handle media uploads if present\n            if (journalData.audioBlob) {\n                const audioUrl = await this.uploadMedia(journalData.audioBlob, 'audio', userId);\n                journal.audioUrl = audioUrl;\n            }\n            if (journalData.videoBlob) {\n                const videoUrl = await this.uploadMedia(journalData.videoBlob, 'video', userId);\n                journal.videoUrl = videoUrl;\n            }\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)(journalRef, journal);\n            return {\n                success: true,\n                id: docRef.id\n            };\n        } catch (error) {\n            console.error('Error creating journal:', error);\n            return {\n                success: false,\n                error: error.message\n            };\n        }\n    }\n    // Upload media files to Firebase Storage\n    async uploadMedia(blob, type, userId) {\n        try {\n            const timestamp = Date.now();\n            const fileName = \"\".concat(userId, \"_\").concat(type, \"_\").concat(timestamp);\n            const storageRef = (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.ref)(_firebase__WEBPACK_IMPORTED_MODULE_2__.storage, \"journals/\".concat(type, \"/\").concat(fileName));\n            await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.uploadBytes)(storageRef, blob);\n            const downloadURL = await (0,firebase_storage__WEBPACK_IMPORTED_MODULE_1__.getDownloadURL)(storageRef);\n            return downloadURL;\n        } catch (error) {\n            console.error('Error uploading media:', error);\n            throw error;\n        }\n    }\n    // Get all journals for a specific user\n    async getUserJournals(userId) {\n        try {\n            const journalsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'journals');\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(journalsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('userId', '==', userId));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const journals = [];\n            querySnapshot.forEach((doc)=>{\n                var _doc_data_createdAt_toDate, _doc_data_createdAt_toDate1, _doc_data_createdAt;\n                journals.push({\n                    id: doc.id,\n                    ...doc.data(),\n                    createdAt: ((_doc_data_createdAt = doc.data().createdAt) === null || _doc_data_createdAt === void 0 ? void 0 : (_doc_data_createdAt_toDate1 = _doc_data_createdAt.toDate) === null || _doc_data_createdAt_toDate1 === void 0 ? void 0 : (_doc_data_createdAt_toDate = _doc_data_createdAt_toDate1.call(_doc_data_createdAt)) === null || _doc_data_createdAt_toDate === void 0 ? void 0 : _doc_data_createdAt_toDate.toISOString()) || new Date().toISOString()\n                });\n            });\n            // Sort by createdAt in JavaScript since we can't use orderBy with where\n            journals.sort((a, b)=>new Date(b.createdAt) - new Date(a.createdAt));\n            return {\n                success: true,\n                journals\n            };\n        } catch (error) {\n            console.error('Error getting user journals:', error);\n            return {\n                success: false,\n                error: error.message,\n                journals: []\n            };\n        }\n    }\n    // Get public journals (for community viewing)\n    async getPublicJournals() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 20;\n        try {\n            const journalsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'journals');\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(journalsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('isPublic', '==', true));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const journals = [];\n            querySnapshot.forEach((doc)=>{\n                var _doc_data_createdAt_toDate, _doc_data_createdAt_toDate1, _doc_data_createdAt;\n                journals.push({\n                    id: doc.id,\n                    ...doc.data(),\n                    createdAt: ((_doc_data_createdAt = doc.data().createdAt) === null || _doc_data_createdAt === void 0 ? void 0 : (_doc_data_createdAt_toDate1 = _doc_data_createdAt.toDate) === null || _doc_data_createdAt_toDate1 === void 0 ? void 0 : (_doc_data_createdAt_toDate = _doc_data_createdAt_toDate1.call(_doc_data_createdAt)) === null || _doc_data_createdAt_toDate === void 0 ? void 0 : _doc_data_createdAt_toDate.toISOString()) || new Date().toISOString()\n                });\n            });\n            // Sort by createdAt in JavaScript and limit results\n            journals.sort((a, b)=>new Date(b.createdAt) - new Date(a.createdAt));\n            return {\n                success: true,\n                journals: journals.slice(0, limit)\n            };\n        } catch (error) {\n            console.error('Error getting public journals:', error);\n            return {\n                success: false,\n                error: error.message,\n                journals: []\n            };\n        }\n    }\n    // Update a journal entry\n    async updateJournal(journalId, updates) {\n        try {\n            const journalRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'journals', journalId);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(journalRef, {\n                ...updates,\n                updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error('Error updating journal:', error);\n            return {\n                success: false,\n                error: error.message\n            };\n        }\n    }\n    // Delete a journal entry\n    async deleteJournal(journalId) {\n        try {\n            const journalRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'journals', journalId);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)(journalRef);\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error('Error deleting journal:', error);\n            return {\n                success: false,\n                error: error.message\n            };\n        }\n    }\n    // Like a journal entry\n    async likeJournal(journalId) {\n        try {\n            const journalRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'journals', journalId);\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(journalRef, {\n                likes: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)() // This will increment the likes count\n            });\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error('Error liking journal:', error);\n            return {\n                success: false,\n                error: error.message\n            };\n        }\n    }\n    // Get journals by tags\n    async getJournalsByTag(tag) {\n        try {\n            const journalsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'journals');\n            const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(journalsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('tags', 'array-contains', tag), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('isPublic', '==', true), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)('createdAt', 'desc'));\n            const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n            const journals = [];\n            querySnapshot.forEach((doc)=>{\n                var _doc_data_createdAt_toDate, _doc_data_createdAt_toDate1, _doc_data_createdAt;\n                journals.push({\n                    id: doc.id,\n                    ...doc.data(),\n                    createdAt: ((_doc_data_createdAt = doc.data().createdAt) === null || _doc_data_createdAt === void 0 ? void 0 : (_doc_data_createdAt_toDate1 = _doc_data_createdAt.toDate) === null || _doc_data_createdAt_toDate1 === void 0 ? void 0 : (_doc_data_createdAt_toDate = _doc_data_createdAt_toDate1.call(_doc_data_createdAt)) === null || _doc_data_createdAt_toDate === void 0 ? void 0 : _doc_data_createdAt_toDate.toISOString()) || new Date().toISOString()\n                });\n            });\n            return {\n                success: true,\n                journals\n            };\n        } catch (error) {\n            console.error('Error getting journals by tag:', error);\n            return {\n                success: false,\n                error: error.message,\n                journals: []\n            };\n        }\n    }\n}\nconst journalService = new JournalService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/journalService.js\n"));

/***/ })

});